@page "/Statistik"

@using ordinationsapp.Data;
@using shared.Model;
@using ordinationsapp.Shared
@using ordinationsapp.Model;
@inject ApiService apiService

<div class="container">
    <h1>Vis statistik</h1>

    <strong>Ikke implementeret ðŸ˜¢</strong>
    <br />

    <div class="row">
        <div class="col-md-12 border p-3">
            <h3>Antal ordinationer</h3>

            <div class="form-group row">
                <label for="vÃ¦gtfra" class="col-sm-4 col-form-label">VÃ¦gt fra</label>
                <div class="col-sm-8">
                    <input type="number" @bind="minVaegt" class="form-control" id="vÃ¦gtfra">
                </div>
            </div>

            <div class="form-group row">
                <label for="vÃ¦gttil" class="col-sm-4 col-form-label">VÃ¦gt til</label>
                <div class="col-sm-8">
                    <input type="number" @bind="maxVaegt" class="form-control" id="vÃ¦gttil">
                </div>
            </div>

            <div class="form-group row">
                <label for="lm" class="col-sm-4 col-form-label">LÃ¦gemiddel</label>
                <div class="col-sm-8">
                    <LaegemiddelList onSelectLÃ¦gemiddel="@onSelectLÃ¦gemiddel"></LaegemiddelList>
                    <button class="btn btn-primary p-3" @onclick="ClickOpret">Opret ordination</button>
                </div>
            </div>
        </div>

        <div class="col-md-12 border p-3">
            <h3>Resultat</h3>

            <div class="form-group row">
                <label for="antal" class="col-sm-4 col-form-label">Antal</label>
                <div class="col-sm-8">
                    <input readonly type="number" value=@antalOrdinationer class="form-control" id="antal">
                </div>
            </div>

        </div>
    </div>

</div>

@code {
    public Laegemiddel? searchLaegemiddel;
    public int antalOrdinationer;
    public double minVaegt, maxVaegt;
    private Laegemiddel[]? lÃ¦gemidler;
    public OrdinationResponse? ordinationerRecord;
    public PatientResponse[]? patienterRecord;


    public List<PatientResponse>? patienterRecordList = new List<PatientResponse>();
    public List<PatientResponse>? patienterRecordListSorted = new List<PatientResponse>();

    public List<Ordination> samletOrdinationer = new List<Ordination>();


    protected override async Task OnInitializedAsync()
    {
        lÃ¦gemidler = await apiService.GetLaegemidler();
        ordinationerRecord = await apiService.GetOrdinationer();
        patienterRecord = await apiService.GetPatienter();
        patienterRecordList = patienterRecord.ToList();

        foreach (var item in ordinationerRecord.dagligFast)
        {
            samletOrdinationer.Add(item);
        }

        foreach (var item in ordinationerRecord.dagligSkaev)
        {
            samletOrdinationer.Add(item);
        }

        foreach (var item in ordinationerRecord.pn)
        {
            samletOrdinationer.Add(item);
        }

    }

    private void onSelectLÃ¦gemiddel(Laegemiddel l)
    {
        this.searchLaegemiddel = l;
        Console.WriteLine("Selected " + l);
    }

    private async void ClickOpret()
    {
        int result = await apiService.GetStatistik(searchLaegemiddel.LaegemiddelId, minVaegt, maxVaegt);

        Console.WriteLine($"Min: {minVaegt}, Max: {maxVaegt}, LÃ¦gemiddel: {searchLaegemiddel}");
        Console.WriteLine(result);
        //patienterRecordListSorted = patienterRecordList.Where(x => (x.vaegt >= minVaegt) && (x.vaegt <= maxVaegt)).ToList();

        //antalOrdinationer = samletOrdinationer.Where(x => x.laegemiddel.LaegemiddelId == searchLaegemiddel.LaegemiddelId).Count();

        //Console.WriteLine($"LÃ¦gemiddel ID antal: {antalOrdinationer}");
        //Console.WriteLine($"Antal inden for vÃ¦gtgruppen: {result}");
    }
}